<!DOCTYPE html> 
<html lang='en'> 
<head> 
<title>LLVM IR SDK</title> 
<meta http-equiv='Content-Type' content='text/html; charset=utf-8'>
<meta name='googlebot' content='noarchive, nosnippet'>
<meta name='robots'    content='noarchive, nosnippet'>
<meta name='description' content='' />
<meta name='keywords' content='' />
<link href='http://fonts.googleapis.com/css?family=PT+Serif:400,700' rel='stylesheet' type='text/css'>

<style>
body                      { width: 900px; margin: auto; margin-top: 1em; background-color: #fff; font-family: Sans-Serif; }
header, section, footer   { margin: 20px; padding: 20px; border-radius: 11px; width: 90%; }
header                    { text-align: center; margin: 0px; }
header>h1                 { font-size: 36px; }
section                   { background-color: #dcb; }
section>section           { background-color: #ba9; }
img                       { border: 1px #888 solid; }
footer                    { text-align: center; }
section>h3                { font-size: 20px; }
section figcaption        { margin-bottom: 20px; }
h1, h4, h3                { margin-top: 0em; }
h1                        { text-shadow: 2px 2px 3px #a97; color: #000; font-size: }
nav                       { margin-top: 20px; }
nav>a                     { margin-right: 20px; font-size: 18px; font-weight: bold; }
.arrow                    { margin: 10px; margin-left: 100px; width: 32px; height: 63px; background: url(images/arrow.png); }
.nonlink                  { color: #900; }
a:link,a:visited,a:active { color: #731; text-decoration: none; }
a:hover                   { color: #731; text-decoration: underline; }
a.toggle                  { display: none; color: #731; font-weight: bold; font-size: 20px; cursor: pointer; }

</style>

<script type='text/javascript' src='js/jquery-1.9.1.min.js'></script>
<script type='text/javascript'>
function start() {
  $('a.toggle.off,span.toggle').toggle();
  $('a.toggle').click( function() {
    $(this).parent().find('span.toggle,a.toggle').toggle();
  });
}
$(start);
</script>

</head>

<body>


<header>
  <h1>LLVM IR SDK</h1>
  <h3>LLVM IR SDK is a rich LLVM IR editor plugin for Eclipse, released for free by Intel.</h3>
  <nav>
    <a href='#Installation'>Installation</a>
    <a href='#Features'>Features</a>
    <a href='#FAQ'>FAQ</a>
    <a href='#Developers'>Developers</a>
  </nav>
</header>


<section id='Installation'>
  <h1>Download and Installation</h1>
  <h3>Initial Installation</h3>
  Requirements:
  <ol>
  <li><a href='http://www.java.com/en/download/index.jsp'>Java 1.6 or newer</a>
  <li><a href='http://www.eclipse.org/downloads/'>Eclipse 3.5 or newer</a> (any package)</li>
  </ol>
  Eclipse update site: <span class='nonlink'>http://amishne.github.com/llvm-ir-editor/update</span><br />
  <a href='http://agile.csc.ncsu.edu/SEMaterials/tutorials/install_plugin/index_v35.html#section1_0'>Click here</a> if not familiar with the Eclipse plugin installation procedure.
  <br /><br />
  
  <h3>Updating to a Newer Version</h3>
  From inside Eclipse, select Help &rarr; Check for Updates.
</section>


<section id='Features'>
  <h1>Features</h1>
  <section>
    <h3>Syntax Highlighting</h3>
    <figcaption>Syntax highlighting which is aware of the semantic differences between elements that syntactically appear the same (e.g. basic block references and parameter references).</figcaption>
    <img src='images/syntax_coloring-basic.png' /><br /><br />
	
    <a class='toggle off'>More information</a>
    <a class='toggle on'>Less information</a>
    <span class='toggle'><br /><br />
	  <figcaption>Aware of the complex type system</figcaption>
      <img src='images/syntax_coloring-types.png' /><br /><br />
      <figcaption>Fully configurable</figcaption>
      <img src='images/syntax_coloring-variation.png' /><br /><br />
      <figcaption>Configured via a simple GUI dialog</figcaption>
      <img src='images/syntax_coloring-dialog.png' />
    </span>
  </section>
  <section>
    <h3>Showing Definitions On Hovers</h3>
    <figcaption>Hovering over value references shows their entire definition in a handy popup</figcaption>
    <img src='images/hover-locals.png' /><br /><br />

    <a class='toggle off'>More information</a>
    <a class='toggle on'>Less information</a>
    <span class='toggle'><br /><br />
      <figcaption>Also works for basic blocks and functions (with scrollbars if necessary)</figcaption>
      <img src='images/hover-basic_block.png' /><br /><br />
      <figcaption>Also works for named user-defined types</figcaption>
      <img src='images/hover-typedef.png' /><br /><br />
      <figcaption>Also works for (some) keywords</figcaption>
      <img src='images/hover-keywords.png' />
    </span>
  </section>
  <section>
    <h3>Inferring Anonymous Element Names</h3>
    <figcaption>The editor can autonomously infer the names of anonymous values</figcaption>
    <img src='images/inferring.png' /><br /><br />
	
	<a class='toggle off'>More information</a>
    <a class='toggle on'>Less information</a>
    <span class='toggle'><br /><br />
      <figcaption>Also identifies and can offer fixes for out-of-sequence names</figcaption>
      <img align="top" src='images/quickfix-numbers-1.png' />
      <img align="top" src='images/quickfix-numbers-2.png' />
	  <img align="top" src='images/quickfix-numbers-3.png' /><br /><br />
    </span>
  </section>
  <section>
    <h3>Occurrence Marking</h3>
    <figcaption>Occurrence highlighting marks the definition and all the references for the value under the cursor, with a different color for the definition. This is an optional feature and is easily toggled with a toolbar button.</figcaption>
    <img src='images/occurrences.png' />
  </section>
  <section>
    <h3>File Outline and Folding</h3>
    <figcaption>An outline of the current file can be displayed side-by-side with the code, with two-way linking between the element under the cursor and the element selected in the outline view.</figcaption>
    <img src='images/outline.png' /><br /><br />
	
	<a class='toggle off'>More information</a>
    <a class='toggle on'>Less information</a>
    <span class='toggle'><br /><br />
      <figcaption>The same hierarchy can be used to "fold" function bodies and basic blocks to only appear on one line, to save screen space</figcaption>
      <img src='images/folding.png' /><br /><br />
    </span>
  </section>
  <section>
    <h3>Type Checking</h3>
    <figcaption>Verifies that every usage of a value is correct according to its type.</figcaption>
    <img src='images/type_checking.png' /><br /><br />
  </section>
  <section>
    <h3>Syntax Checking</h3>
    <figcaption>Provides basic syntax error checking, identifying malformed files.</figcaption>
    <img src='images/syntax_errors.png' /><br /><br />

    <a class='toggle off'>More information</a>
    <a class='toggle on'>Less information</a>
    <span class='toggle'><br /><br />
	  <figcaption>Also provides useful hints for some syntax errors.</figcaption>
      <img src='images/syntax_errors-friendly.png' /><br /><br />
    </span>
  </section>
  <section>
    <h3>Content Assist</h3>
    <figcaption>Ctrl+space opens a context-aware popup box with value suggestions</figcaption>
    <img src='images/content_assist-values.png' /><br /><br />

    <a class='toggle off'>More information</a>
    <a class='toggle on'>Less information</a>
    <span class='toggle'><br /><br />
      <figcaption>Will not suggest values outside the current scope</figcaption>
      <img src='images/content_assist-scope.png' /><br /><br />
	  <figcaption>Also works for non-value syntactic elements, such as instruction opcodes</figcaption>
      <img src='images/content_assist-syntax.png' /><br /><br />
    </span>
  </section>
  <section>
    <h3>Per-Instruction Validation</h3>
    <figcaption>Every instruction has its own validation check to verify it is being used legally</figcaption>
    <img src='images/custom_validation-add.png' /><br /><br />

    <a class='toggle off'>More information</a>
    <a class='toggle on'>Less information</a>
    <span class='toggle'><br /><br />
      <figcaption>With some of the validation checks, such as for phi nodes, extending beyond simple type checks</figcaption>
      <img src='images/custom_validation-phi.png' /><br /><br />
    </span>
  </section>
  <section>
    <h3>Control Flow Awareness</h3>
    <figcaption>The editor is aware of the flow between basic blocks and can provide warnings and errors for problem in that flow, for example for a non-dominated use.</figcaption>
    <img src='images/domination.png' /><br /><br />

    <a class='toggle off'>More information</a>
    <a class='toggle on'>Less information</a>
    <span class='toggle'><br /><br />
      <figcaption>With special rules for phi nodes</figcaption>
      <img src='images/domination-phi.png' /><br /><br />
	  <figcaption>And providing warnings for unreachable basic blocks</figcaption>
      <img src='images/reachability.png' /><br /><br />
    </span>
  </section>
  <section>
    <h3>Quickfix for Common Code Insertion</h3>
    <figcaption>For example, a quickfix option can generate function declarations directly from function calls.</figcaption>
    <img align="top" src='images/quickfix-create_function-1.png' />
	<img align="top" src='images/quickfix-create_function-2.png' /><br /><br />
	
	<a class='toggle off'>More information</a>
    <a class='toggle on'>Less information</a>
    <span class='toggle'><br /><br />
      <figcaption>Another quickfix option can insert conversion for incorrect types</figcaption>
      <img src='images/quickfix-typefix-1.png' />
      <img src='images/quickfix-typefix-2.png' /><br /><br />
    </span>
  </section>
</section> 
 
<section id='FAQ'>
  <h1>FAQ</h1>
  <section>
    <h4>Is this plugin free to use?</h4>
    Yes, it is completely free to use (as well as to modify - it's an open-source project).
  </section>
  <section>
    <h4>Does this require an installation of LLVM?</h4>
    No, it is completely independent, the only requirements are the ones listed above in the <a href='#Installation'>installation</a> section.
  </section>
  <section>
    <h4>If the editor reports an error, does this mean this won't be accepted by LLVM? If it doesn't, does it mean it will?</h4>
    Although it is not guaranteed, the purpose of this plugin is to get as close as possible to this state from both directions.
  </section>
  <section>
    <h4>Which version of the IR is this editor compatible with?</h4>
    At the moment, the editor is only compatible with LLVM 3.2 IR. It cannot handle older or newer IR constructs.
  </section>
  <section>
    <h4>How stable is this plugin? How robust for handling large files?</h4>
    This project is in <em>beta</em> phase, and the editor does occasionally produce an error dialog or hang for a few seconds, particularly when editing files (as opposed to just reading them). If this happens to you, please <a href="#open_a_bug">open a bug about it</a>.<br />
	The editor's performance depends on the machine, but it can get sluggish when operating on files with thousands of lines.
  </section>
  <section>
    <a id="open_a_bug" />
    <h4>I've found a bug!</h4>
	Please first check the <a href='https://github.com/amishne/llvm-ir-editor/issues?labels=&milestone=&page=1&state=open'>open issue list</a> and verify it isn't already there. If it isn't, please either <a href='https://github.com/amishne/llvm-ir-editor/issues/new'>open an issue on Github</a> or send an e-mail to the maintainer (first_name.last_name@company.com, where first_name, last_name and company are listed on <a href='https://github.com/amishne'>the github user page</a>).
	<br /><br />
	The quality of the project will never improve if no bugs are reported, so if you find it useful <em>please</em> open bug reports for every little problem you encounter.
  </section>
  <section>
    <h4>I'd like to request a feature.</h4>
	Please first check the <a href='https://github.com/amishne/llvm-ir-editor/issues?labels=&milestone=&page=1&state=open'>open issue list</a> and verify it isn't already there. If it isn't, please either <a href='https://github.com/amishne/llvm-ir-editor/issues/new'>open an issue on Github</a> or send an e-mail to the maintainer (first_name.last_name@company.com, where first_name, last_name and company are listed on <a href='https://github.com/amishne'>the github user page</a>).
  </section>
  <section>
    <h4>I've installed the plugin succesfully, but it doesn't seem to be working at all!</h4>
    Make sure your Eclipse is running on top of Java 1.6 or newer. <a href="http://wiki.eclipse.org/FAQ_How_do_I_run_Eclipse%3F#Find_the_JVM">Here are instructions on how to select a vm</a>, and <a href="http://wiki.eclipse.org/Eclipse.ini#Specifying_the_JVM">here's how to edit <code>eclipse.ini</code> to always select a given vm</a>.
  </section>
  <section>
    <h4>I've installed the plugin succesfully and I'm running Java 1.6 or newer, but it doesn't seem to be working at all!</h4>
    Your <code>.ll</code> files might be associated with another editor in Eclipse. Right-click an <code>.ll</code> file and select "open with &rarr; llvm ir editor".
  </section>
</section>

<section id='Developers'>
  <h1>Developers</h1>
  <a href='https://github.com/amishne/llvm-ir-editor'>Visit the Github site</a> for source code, issue list and developer FAQ.
</section>

<footer>
  Project maintained by <a href='https://github.com/amishne'>Alon Mishne</a> | Site by <a href='//DanyShaanan.com'>Dany Shaanan</a>
</footer>

<a href='https://github.com/amishne/llvm-ir-editor'><img style='position:fixed;top:0;right:0;border:0;' src='https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png' alt='Fork me on GitHub'></a>

<script type='text/javascript'>
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-38111467-1']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>

</body>
</html>
